{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/HumayunK01/Numpy-Assignment/blob/main/Numpy_Assignment_(Humayun_Khan).ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "32b30d84",
      "metadata": {
        "id": "32b30d84"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "84c54af7",
      "metadata": {
        "id": "84c54af7"
      },
      "outputs": [],
      "source": [
        "#Creating a simple array"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "03e9f9e3",
      "metadata": {
        "id": "03e9f9e3",
        "outputId": "e226bc15-e71b-4264-d4ca-1b55f15c908d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 1  3  6]\n",
            " [ 8 10 12]\n",
            " [14 16 18]\n",
            " [20 22 24]]\n"
          ]
        }
      ],
      "source": [
        "arr = np.array([[1, 3, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]])\n",
        "print(arr)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ce294bb2",
      "metadata": {
        "id": "ce294bb2"
      },
      "outputs": [],
      "source": [
        "#To find the shape of array"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1bdad764",
      "metadata": {
        "id": "1bdad764",
        "outputId": "f453f2a9-85de-4e4a-a410-118ed44c6538",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "arr.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "edbff95e",
      "metadata": {
        "id": "edbff95e"
      },
      "outputs": [],
      "source": [
        "#To find the type of array dimension"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "593a2eac",
      "metadata": {
        "id": "593a2eac",
        "outputId": "06b16100-c235-436b-db75-05c85dd102c8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int64')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "arr.dtype"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e37fa226",
      "metadata": {
        "id": "e37fa226"
      },
      "outputs": [],
      "source": [
        "#To find the array type"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4ae8b565",
      "metadata": {
        "id": "4ae8b565",
        "outputId": "2ddf64f7-1c9d-4dc9-b252-e5ced1f8f083",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "type(arr)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0e4e0771",
      "metadata": {
        "id": "0e4e0771"
      },
      "outputs": [],
      "source": [
        "#Using the arange() function"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ec21c21f",
      "metadata": {
        "id": "ec21c21f",
        "outputId": "412581f0-2dca-4e52-f67c-704182c3a44d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1,  6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81,\n",
              "       86, 91, 96])"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "np.arange(1,101, 5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3da11a95",
      "metadata": {
        "id": "3da11a95"
      },
      "outputs": [],
      "source": [
        "#Using random() function"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "94d50ce8",
      "metadata": {
        "id": "94d50ce8",
        "outputId": "ce92fd09-7f71-4d63-cba5-ce47aff42b11",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.0317111 , 0.12124952],\n",
              "       [0.22559043, 0.07542932]])"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "x = np.random.random((2, 2))\n",
        "x"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "732e5854",
      "metadata": {
        "id": "732e5854"
      },
      "outputs": [],
      "source": [
        "#Using reshape function"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "aa6924d9",
      "metadata": {
        "id": "aa6924d9",
        "outputId": "567c2aea-7fd6-4b50-c4e6-832c6cac75b4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(5, 1)\n"
          ]
        }
      ],
      "source": [
        "arr_two = np.array([5, 4, 15, 19, 3]).reshape(5, 1)\n",
        "print(arr_two.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4ae141b7",
      "metadata": {
        "id": "4ae141b7"
      },
      "outputs": [],
      "source": [
        "#Using np.count_nonzero for whole array"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d2613759",
      "metadata": {
        "id": "d2613759",
        "outputId": "fabfcfcd-d29e-4b85-dbc9-8f9d222306b8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "there are 30 non zero values in the given array\n"
          ]
        }
      ],
      "source": [
        "arr_three = np.eye(30)\n",
        "arr_three_nonzero = np.count_nonzero(arr_three)\n",
        "print(\"there are {} non zero values in the given array\".format(arr_three_nonzero))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4aec536b",
      "metadata": {
        "id": "4aec536b"
      },
      "outputs": [],
      "source": [
        "#Using numpy.where"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1a3bb363",
      "metadata": {
        "id": "1a3bb363",
        "outputId": "6735f31e-0040-4587-d656-78efcf1409f6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([['pass', 'pass', 'pass', 'fail', 'pass', 'pass', 'fail', 'pass',\n",
              "        'pass', 'pass'],\n",
              "       ['pass', 'pass', 'pass', 'pass', 'pass', 'pass', 'fail', 'fail',\n",
              "        'pass', 'pass']], dtype='<U4')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "arr_four = np.array([[85,55,43,27,65,45,34,56,76,98],\n",
        "                    [56,76,56,87,98,78,32,12,56,67]])\n",
        "\n",
        "arr_four_result = np.where(arr_four<35, \"fail\", \"pass\")\n",
        "arr_four_result"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a8017bfc",
      "metadata": {
        "id": "a8017bfc"
      },
      "outputs": [],
      "source": [
        "#Done by: Humayun Khan\n",
        "#Email: humayunk.pvt@gmail.com"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.12"
    },
    "colab": {
      "name": "Numpy Assignment (Humayun Khan).ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
